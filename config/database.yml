# PostgreSQL. Versions 9.3 and up are supported.
#
# Install the pg driver:
#   gem install pg
# On macOS with Homebrew:
#   gem install pg -- --with-pg-config=/usr/local/bin/pg_config
# On macOS with MacPorts:
#   gem install pg -- --with-pg-config=/opt/local/lib/postgresql84/bin/pg_config
# On Windows:
#   gem install pg
#       Choose the win32 build.
#       Install PostgreSQL and put its /bin directory on your path.
#
# Configure Using Gemfile
# gem 'pg'
#
default: &default
  adapter: <%= ENV.fetch('DATABASE_ADAPTER', 'mysql2') %>
  encoding: utf8
  support_json: <%= ENV.fetch('DATABASE_SUPPORT_JSON', 'true') %>
  collation: <%= ENV.fetch('DATABASE_COLLATION', 'utf8_general_ci') %>
  pool: <%= ENV.fetch("RAILS_MAX_THREADS", 8).to_i * ENV.fetch("WEB_CONCURRENCY", 1).to_i %>
  host: <%= ENV.fetch('DATABASE_HOST', '127.0.0.1') %>
  port: <%= ENV.fetch('DATABASE_PORT', 3306) %>
  username: <%= ENV.fetch('DATABASE_USER', 'root') %>
  password: <%= ENV['DATABASE_PASS'] %>

staging:
  primary:
    <<: *default
    database: <%= ENV.fetch('DATABASE_NAME', 'peatio_production') %>
  reports:
    <<: *default
    migrations_paths: db/reports_migrate
    database: <%= ENV.fetch('REPORTS_DATABASE_NAME', 'peatio_production_reports') %>
development:
  primary:
    <<: *default
    database: peatio_development
  reports:
    <<: *default
    migrations_paths: db/reports_migrate
    database: peatio_development_reports
test:
  primary:
    <<: *default
    database: liza_test
  reports:
    <<: *default
    migrations_paths: db/reports_migrate
    database: liza_test_reports

# As with config/credentials.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password or a full connection URL as an environment
# variable when you boot the app. For example:
#
#   DATABASE_URL="postgres://myuser:mypass@localhost/somedatabase"
#
# If the connection URL is provided in the special DATABASE_URL environment
# variable, Rails will automatically merge its configuration values on top of
# the values provided in this file. Alternatively, you can specify a connection
# URL environment variable explicitly:
#
#   production:
#     url: <%= ENV['MY_APP_DATABASE_URL'] %>
#
# Read https://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full overview on how database connection configuration can be specified.
#
production:
  primary:
    <<: *default
    database: <%= ENV.fetch('DATABASE_NAME', 'peatio_production') %>
  reports:
    <<: *default
    migrations_paths: db/reports_migrate
    database: <%= ENV.fetch('REPORTS_DATABASE_NAME', 'peatio_production_reports') %>
