h1= paginated_records.model_name.human_plural
- if respond_to? :blockchain
  = render 'blockchains_select'
- if respond_to? :currency
  = render 'currencies_select', currencies: Currency.visible.order(:id)
- if respond_to? :market
  = render 'markets_select'
- if respond_to? :aasm_state
  = render 'state_select', states: model_class.group(:aasm_state).count.keys, key: :aasm_state_eq
- if q.klass.ransackable_scopes.include? :completed
  = render 'deposit_status_select'
.clearfix
= render index_form
- if respond_to? :account
  - if account.is_a? Operations::Account
    = render 'operations_account'
  - elsif account.is_a? Account
    = render 'account'
.mt-3= render 'member_brief', member: member if respond_to?(:member) && memger.present?
= render 'summary_by_currency', summary: summary if summary.present? && summary[:rows].present?
= render 'balances', balances: PaymentAddress.total_balances if paginated_records.model == PaymentAddress
hr
div.mb-2
  = t 'application.index..total_records', count: paginated_records.total_count
  span.ml-4
    - if paginated_records.total_count > Settings.max_export_records_count
      span.text-muted= t '.too_much_records_to_export'
    - elsif paginated_records.total_count.positive?
      = download_link
= render 'table', items: paginated_records.decorate if paginated_records.count.positive?
= paginate paginated_records
= render 'hided_columns'
