h1= paginated_records.model_name.human_plural
= render 'blockchains_select' 
= render 'currencies_select', currencies: Currency.where(id: Transaction.group(:currency_id).count.keys)
= render 'state_select', states: model_class.group(:kind).count.keys, key: :by_kind
= render 'state_select', states: model_class.group(:direction).count.keys, key: :by_direction
= render 'state_select', states: model_class.group(:to).count.keys, key: :by_to
= render 'state_select', states: model_class.group(:from).count.keys, key: :by_from
.clearfix
.mb-3= render partial: 'form'
= render 'summary_by_currency', summary: summary if summary.present? && summary[:rows].present?
= render 'balances', balances: PaymentAddress.total_balances if paginated_records.model == PaymentAddress
hr
div.mb-2
  = t 'application.index.total_records', count: paginated_records.total_count
  span.ml-4
    - if paginated_records.total_count > Settings.max_export_records_count
      span.text-muted= t '.too_much_records_to_export'
    - elsif paginated_records.total_count.positive?
      = download_link
= render 'table', items: paginated_records.decorate, css_class: 'table-sm table-condensed text-small' if paginated_records.count.positive?
= paginate paginated_records
= render 'hided_columns'
